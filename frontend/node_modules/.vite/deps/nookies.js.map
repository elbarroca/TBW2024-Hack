{
  "version": 3,
  "sources": ["../../cookie/index.js", "../../nookies/src/utils.ts", "../../nookies/src/index.ts"],
  "sourcesContent": ["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(';')\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf('=')\n\n    // skip things that don't look like key=value\n    if (index < 0) {\n      continue;\n    }\n\n    var key = pair.substring(0, index).trim()\n\n    // only assign once\n    if (undefined == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim()\n\n      // quoted values\n      if (val[0] === '\"') {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n", null, null],
  "mappings": "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",
  "names": ["decode"]
}
